name: Test and build

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

env:
  HYP3_REGISTRY: 845172464411.dkr.ecr.us-west-2.amazonaws.com
  AWS_REGION: us-west-2
  AWS_ACCESS_KEY_ID: {{'${{ secrets.V2_AWS_ACCESS_KEY_ID }}'}}
  AWS_SECRET_ACCESS_KEY: {{'${{ secrets.V2_AWS_SECRET_ACCESS_KEY }}'}}

jobs:
  pytest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          mamba-version: "*"
          python-version: 3.9
          activate-environment: {{ cookiecutter.project_name }}
          environment-file: environment.yml

      - name: Pytest in conda environment
        shell: bash -l {0}
        run: |
          python -m pip install .[develop]
          pytest --cov={{ cookiecutter.package_name }}

  tag-version:
    runs-on: ubuntu-latest
    needs: pytest
    outputs:
      SDIST_VERSION:  {{'${{ steps.build.outputs.version }}'}}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: {{'${{ secrets.TOOLS_BOT_PAK }}'}}

      - name: Get associated PR
        if: github.ref == 'refs/heads/main'
        uses: helaili/github-graphql-action@2.0.1
        env:
          GITHUB_TOKEN: {{'${{ secrets.TOOLS_BOT_PAK }}'}}
        with:
          query: .github/queries/associated-pr.query.yml
          outputFile: pr.json
          owner: ASFHyP3
          name: {{ cookiecutter.project_name }}
          sha: {{'${{ github.sha }}'}}

      - name: Get PR labels
        if: github.ref == 'refs/heads/main'
        uses: helaili/github-graphql-action@2.0.1
        env:
          GITHUB_TOKEN: {{'${{ secrets.TOOLS_BOT_PAK }}'}}
        with:
          query: .github/queries/pr-labels.query.yml
          outputFile: labels.json
          owner: ASFHyP3
          name: {{ cookiecutter.project_name }}

      - name: Upload a Build Artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v2
        with:
          name: query-responces
          path: '*.json'

      - uses: actions/setup-python@v1
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools wheel "setuptools-scm[toml]" importlib_metadata
          python -m pip install bump2version

      - name: Tag version
        if: github.ref == 'refs/heads/main'
        run: |
          git fetch origin +refs/tags/*:refs/tags/*
          git config user.email "UAF-asf-apd@alaska.edu"
          git config user.name "tools-bot"

          LABEL_QUERY='.data.repository.pullRequest.labels.nodes[].name'
          SELECT='select(. == "major" or . == "minor" or . == "patch")'
          BUMP_PART=$(jq --raw-output  "${LABEL_QUERY} | ${SELECT}" labels.json | sort | head -1)

          PR_QUERY='.data.repository.commit.associatedPullRequests.edges[0].node.title'
          TAG_MSG=$(jq --raw-output "${PR_QUERY}"  pr.json)

          bump2version --current-version $(git describe --abbrev=0) \
              --tag --tag-message "${TAG_MSG}" "${BUMP_PART}"

          git push --tags
          echo "Tagged version $(git describe --abbrev=0) and pushed back to repo"

  dockerize:
    runs-on: ubuntu-latest
    needs: tag-version
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: {{'${{ env.AWS_ACCESS_KEY_ID }}'}}
          aws-secret-access-key: {{'${{ env.AWS_SECRET_ACCESS_KEY }}'}}
          aws-region: {{'${{ env.AWS_REGION }}'}}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: set environment variables
        run: |
          echo "SDIST_VERSION=$(python setup.py --version)" >> $GITHUB_ENV
          echo "CI_JOB_TIMESTAMP=$(date --utc --rfc-3339=seconds)" >> $GITHUB_ENV

      - name: Build, tag, and push image to Amazon ECR
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            {{'${{ env.HYP3_REGISTRY }}/${{ github.repository_owner }}:${{ env.SDIST_VERSION }}'}}
          labels: |
            org.opencontainers.image.created={{'${{ env.CI_JOB_TIMESTAMP }}'}}
            org.opencontainers.image.version={{'${{ env.SDIST_VERSION }}'}}
            org.opencontainers.image.revision={{'${{ github.sha }}'}}


      - name: Add test tag
        if: github.ref == 'refs/heads/develop'
        uses: akhilerm/tag-push-action@v1.0.0
        with:
          src: {{'${{ env.HYP3_REGISTRY }}/${{ github.repository_owner }}:${{ env.SDIST_VERSION }}'}}
          dst: {{'${{ env.HYP3_REGISTRY }}/${{ github.repository_owner }}:test'}}

      - name: Add latest tag
        if: github.ref == 'refs/heads/main'
        uses: akhilerm/tag-push-action@v1.0.0
        with:
          src: {{'${{ env.HYP3_REGISTRY }}/${{ github.repository_owner }}:${{ env.SDIST_VERSION }}'}}
          dst: {{'${{ env.HYP3_REGISTRY }}/${{ github.repository_owner }}:latest'}}

      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${HYP3_REGISTRY}
